#! /bin/bash
if [ "${1}"  == "--help" ]; then
    echo "Options for running this configuration file:"
    echo "--help                    Prints this message"
    echo "--ReBuild                 Cleans out existing downloads and resets the configuration"
    echo "--useRoot <ROOTSYSPath>   Configures the enviroment to use root versions <ROOTSYSPath> instead of default version" 
    echo "--TauSpinner              Configures the make file to use TauSpinner"
    echo "--SVfit                   Configures the make file to use SVfit"
    echo "--cherepanov              Configures the make file to compile files in the directory cherepanov"
    echo "--goe                     Configures the make file to compile files in the directory goe"
    echo "--lebihan                 Configures the make file to compile files in the directory lebihan"
    echo "--gbourgat                Configures the make file to compile files in the directory gbourgat"



else

    echo "Configuring Environment...."
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/CommonUtils/lib
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/DataFormats/lib
    export DATAFORMATS_LIB=$PWD/DataFormats/lib/libDataFormats.so
    export codedir=$PWD
    ## setup variables for make files
    export ROOTSYS=/libcern/root/5.34.18/sl6.3-x86_64
#    ROOT="$PWD/../root/"
    if [ "${1}"  == "--useRoot" ]; then
        export ROOTSYS=${2}
        ROOT="$PWD/../root/"
    fi
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib/
    export PATH=$PATH:$ROOTSYS/bin/
    
    UseSVfit=0
    UseTauSpinner=0
    for var in $@ ; do
	if [ "${var}" == "--ReBuild" ]; then
#	    rm -rf CommonUtils/SimpleFits 
#	    rm -rf CommonUtils/TauDataFormat 
	    rm -rf CommonUtils/SVfit_standalone
	    rm -rf CommonUtils/lib
	    rm -rf TauSpiner/hepmc
	    rm -rf TauSpiner/HepMC-2.06.05*
	    rm -rf TauSpiner/pythia8*
	    rm -rf TauSpiner/tauola*
	    rm -rf TauSpiner/lhapdf
	    rm make.inc
	fi
	if [ "${var}" == "--TauSpinner" ]; then
	    UseTauSpinner=1
	fi
	if [ "${var}" == "--SVfit" ]; then
	    UseSVfit=1
	fi
    done
    
    myINC=$(ls | grep make.inc | wc -l)
    if [ $myINC == 0 ]; then
	echo "# -*- mode: makefile-gmake -*-" >> make.inc
	for var in $@ ; do
		echo ${var}
	    if [ "${var}" == "--TauSpinner" ]; then
		echo "Configuring Code to use TauSpinner"
		echo "USE_TauSpinner=1" >> make.inc
	    fi
	   	if [ "${var}" == "--SVfit" ]; then
		echo "Configuring Code to use SVfit"
		echo "USE_SVfit=1" >> make.inc
	    fi
	    if [ "${var}" == "--cherepanov" ]; then
		echo "Configuring Code to use directory cherepanov"
		echo "USE_cherepanov=1" >> make.inc
	    fi
	    if [ "${var}" == "--goe" ]; then
		echo "Configuring Code to use directory goe"
		echo "USE_goe=1" >> make.inc
	    fi
	    if [ "${var}" == "--lebihan" ]; then
		echo "Configuring Code to use directory lebihan"
		echo "USE_lebihan=1" >> make.inc
	    fi
	    if [ "${var}" == "--gbourgat" ]; then
		echo "Configuring Code to use directory lebihan"
		echo "USE_gbourgat=1" >> make.inc
	    fi

	done
    fi
    
    ## now downloading required code from github
    cd CommonUtils
    CommonUtils=$(ls | grep TauDataFormat | wc -l)
    cd ..
    if [ $CommonUtils == 0 ]; then
	cd CommonUtils
	mkdir lib
	
	git clone https://github.com/cherepan/SimpleFits.git SimpleFits
	
	git clone https://github.com/cherepan/TauDataFormat.git TauDataFormat
	
	if [ $UseSVfit == 1 ]; then
		git clone -b svFit_2015Apr03 https://github.com/veelken/SVfit_standalone.git TauAnalysis/SVfitStandalone
	fi
	
	cd ../
    fi

    if [ $UseTauSpinner == 1 ]; then
        # now get TauSpiner
	hepmc=$(ls TauSpiner/* | grep HepMC | wc -l) 
	if [ $hepmc == 0 ]; then
	    cd TauSpiner
	    wget http://lcgapp.cern.ch/project/simu/HepMC/download/HepMC-2.06.05.tar.gz
	    tar -xzvf HepMC-2.06.05.tar.gz
	    mkdir hepmc
	    cd hepmc/
	    mkdir build install
	    cd ../../
	fi 
	lhapdf=$(ls TauSpiner/* | grep  lhapdf | wc -l)
	if [ $lhapdf == 0 ]; then
		cd TauSpiner
	    wget http://www.hepforge.org/archive/lhapdf/lhapdf-5.9.1.tar.gz
	    cd ..
	fi
	pythia=$(ls TauSpiner/* | grep pythia8 | wc -l )
	if [ $pythia == 0 ]; then 
	    cd TauSpiner
	    wget http://service-spi.web.cern.ch/service-spi/external/MCGenerators/distribution/pythia8/pythia8-176-src.tgz 
	    tar -xzvf pythia8-176-src.tgz
	    cd ..
	fi
	tauola=$(ls TauSpiner/* | grep tauola++ | wc -l )
	if [ $tauola == 0 ]; then 
	    cd TauSpiner
	    wget http://service-spi.web.cern.ch/service-spi/external/MCGenerators/distribution/tauola++/tauola++-1.1.3-src.tgz
	    tar -xzvf tauola++-1.1.3-src.tgz
	    cd ..
	fi
    fi
    
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/TauSpiner/tauola++/1.1.3/lib
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/TauSpiner/pythia8/176/lib/
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/TauSpiner/lhapdf/lib/
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/TauSpiner/hepmc/install/lib/
    
    echo "Environment Configured"
fi
